#!/bin/bash

# create a simple spreadsheet
mkdir -p sv_test
echo > sv_test/user-scenarios.csv
sv_file=sv_test/user-scenarios.csv
sv_letter=a
sv_upper=A
. ns run add

sv_letter=a
sv_upper=A
. ns run load
sv_letter=c
sv_upper=C
. ns run add
sv_letter=b # fix the skipped letter
sv_upper=B # fix the skipped letter
. ns run save # bug used to wrongly replace A->B instead of C->B
last=$(tail -1 sv_test/user-scenarios.csv)
test="US1 - Load Then Add Updates Row Number Test"
# . ns run print
if [[ "$last" != "b,B" && "$last" != "B,b" ]]; then
    echo "${test}...FAIL"
else
    echo "${test}...PASS"
fi

. ns delete last sv_letter sv_upper test

test="US2 - Save With New Var Adds A New Column Test"  # other rows get empty

sv_letter=a
. ns run load
sv_lower=a  # new column
. ns run save
first=$(head -1 "$sv_file")
last=$(tail -1 "$sv_file")
if [[ "$first" != "a,a,A" && "$first" != "a,A,a" ]]; then
    if [[ "$last" != ",b,B" && "$last" != ",B,b" ]]; then
        echo "${test}...FAIL"
    else
        echo "${test}...PASS"
    fi
else
    echo "${test}...PASS"
fi

test="US3 - Add With New Var Adds A New Column Test"

sv_letter=c
sv_lower=c
sv_upper=C
sv_flag=Y  # new column
. ns run add
first=$(head -1 "$sv_file")
last=$(tail -1 "$sv_file")
if [[ "$first" != ",a,a,A" && "$first" != ",a,A,a" ]]; then
    if [[ "$last" != "Y,c,c,C" && "$last" != "Y,c,C,c" ]]; then
        echo "${test}...FAIL"
    else
        echo "${test}...PASS"
    fi
else
    echo "${test}...PASS"
fi

# cat "$sv_file"
# 
test="US4 - Add Or Save 2+ New Vars Does Not Add Column Test" # protects against adding extra columns that were previously loaded from another file and never unset

sv_letter=d
sv_lower=d
sv_upper=D
sv_flag=Y
sv_new_column=d # new column
sv_new_columnd=d # new column
. ns run add 2>/dev/null || true
. ns run save 2>/dev/null || true

d_col_cnt=$(cat "$sv_file" | grep "d" | wc -l)
if [[ $d_col_cnt -gt 0 ]]; then
    echo "${test}...FAIL"
else
    echo "${test}...PASS"
fi

. ns delete "sv_*"
. ns delete d_col_cnt

test="US5 - Adding empty var in row, then load it and re-save it"
sv_file=sv_test/user-scenarios-empty-var-test.csv
if [[ -f "$sv_file" ]]; then
    rm "$sv_file"
fi
sv_empty=
sv_other=1
. ns run add
empty_var_line=$(tail -1 "$sv_file")
capture_row_no="$sv_row"
. ns run load
. ns run save # 2>&1 1>>/dev/null
wcl=$(cat "$sv_file" | wc -l)
if [[ $wcl -ne 3 && "$sv_row" != 2 && "$capture_row_no" != "1" && "$empty_var_line" != "1," && "$empty_var_line" != ",1" ]]; then
    echo "${test}...FAIL"
else
    echo "${test}...PASS"
fi

. ns delete "sv_*"
. ns delete wcl empty_var_line capture_row_no

test="US6 - Omitted column fails to add row"
sv_file="sv_test/user-scenarios-omitted.csv"
if [[ -f "$sv_file" ]]; then
    rm "$sv_file"
fi
echo "title,other,stuff" >> "$sv_file"
sv_title="My Title: My subtitle, and stuff"
sv_other="my data"
# sv_stuff gets omitted
. ns run add 2>/dev/null
ec=$?
wcl=$(cat "$sv_file" | wc -l)

if [[ $wcl -ne 1 || $ec -lt 1 ]]; then
    echo "${test}...FAIL"
else
    echo "${test}...PASS"
fi

. ns delete "sv_*"
. ns delete ec
